import telebot
from telebot import types
import psycopg2
from config import host, user, password, db_name, token


bot = telebot.TeleBot(token)


try:
    connection = psycopg2.connect(
        host=host,
        user=user,
        password=password,
        database=db_name
    )
    connection.autocommit = True

    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–Ω–æ–ø–∫–∏.


    @bot.message_handler(commands=['start'])
    def star_menu(m):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö")
        item2 = types.KeyboardButton("üìù –í–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
        markup.add(item1)
        markup.add(item2)
        bot.send_message(m.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –æ–ø—Ü–∏—é', reply_markup=markup)

    # –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

    @bot.message_handler(content_types=["text"])
    def start_message(message):
        with connection.cursor() as cursor:
            if message.text.strip() == 'üèãÔ∏è‚Äç‚ôÄÔ∏è–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å –∏ –≥—Ä—É–¥—å")
                item2 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –±–∏—Ü–µ–ø—Å –∏ —Å–ø–∏–Ω—É")
                item3 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –ø–ª–µ—á–∏")
                item5 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ")
                item4 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item5, item4)

                bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                                 reply_markup=markup)
            if message.text.strip() == "üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞":
                cursor.execute(
                    '''select name_of_training
                    from training t inner join exercises e2 on t.id = e2.id_training 
                    where e2.date_of_training =  (select max(date_of_training) from exercises e);                                  
                    '''
                )

                bot.send_message(message.chat.id, f'–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: {cursor.fetchone()[0]}\n')

            if message.text.strip() == 'üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å –∏ –≥—Ä—É–¥—å':
                bot.send_message(message.chat.id, '–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å –∏ –≥—Ä—É–¥—å')
                cursor.execute(
                    '''select  name_of_exercises,
                    date_of_training,
                    operating_weight,
                    number_of_repetitions
                    from 
                    public.exercises 
                    where id_training = 1 and date_of_training = (select date_of_training from exercises 
                    where id_training = '1' 
                    group by date_of_training 
                    order by 1 desc 
                    limit 1);               
                    '''
                )
                query = cursor.fetchall()
                for i in range(len(query)):
                    bot.send_message(message.chat.id, f'–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: {query[i][0]}\n'
                                                      f'–î–∞—Ç–∞: {query[i][1]}\n'
                                                      f'–†–∞–±–æ—á–∏–π –≤–µ—Å: {query[i][2]}\n'
                                                      f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: {query[i][3]}')
            if message.text.strip() == 'üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –±–∏—Ü–µ–ø—Å –∏ —Å–ø–∏–Ω—É':
                bot.send_message(message.chat.id, '–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –±–∏—Ü–µ–ø—Å –∏ —Å–ø–∏–Ω—É')
                cursor.execute(
                    '''select  name_of_exercises,
                    date_of_training,
                    operating_weight,
                    number_of_repetitions
                    from 
                    public.exercises 
                    where id_training = 2 and date_of_training = (select date_of_training from exercises 
                    where id_training = '2' 
                    group by date_of_training 
                    order by 1 desc 
                    limit 1);               
                    '''
                )
                query = cursor.fetchall()
                for i in range(len(query)):
                    bot.send_message(message.chat.id, f'–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: {query[i][0]}\n'
                                                      f'–î–∞—Ç–∞: {query[i][1]}\n'
                                                      f'–†–∞–±–æ—á–∏–π –≤–µ—Å: {query[i][2]}\n'
                                                      f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: {query[i][3]}')
            if message.text.strip() == 'üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –ø–ª–µ—á–∏':
                bot.send_message(message.chat.id, '–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –ø–ª–µ—á–∏')
                cursor.execute(
                    '''select  name_of_exercises,
                    date_of_training,
                    operating_weight,
                    number_of_repetitions
                    from 
                    public.exercises 
                    where id_training = 3 and date_of_training = (select date_of_training from exercises 
                    where id_training = '3' 
                    group by date_of_training 
                    order by 1 desc 
                    limit 1);               
                    '''
                )
                query = cursor.fetchall()
                for i in range(len(query)):
                    bot.send_message(message.chat.id, f'–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: {query[i][0]}\n'
                                                      f'–î–∞—Ç–∞: {query[i][1]}\n'
                                                      f'–†–∞–±–æ—á–∏–π –≤–µ—Å: {query[i][2]}\n'
                                                      f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: {query[i][3]}')
            if message.text.strip() == 'üîô –ù–∞–∑–∞–¥':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö")
                item2 = types.KeyboardButton("üìù –í–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
                markup.add(item1)
                markup.add(item2)
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –æ–ø—Ü–∏—é', reply_markup=markup)
            if message.text.strip() == 'üìù –í–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å –∏ –≥—Ä—É–¥—å")
                item2 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –±–∏—Ü–µ–ø—Å –∏ —Å–ø–∏–Ω—É")
                item3 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –ø–ª–µ—á–∏")
                item4 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item4)
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç', reply_markup=markup)
            if message.text.strip() == "üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å –∏ –≥—Ä—É–¥—å":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–†–∞–∑–≥–∏–±–∞–Ω–∏–µ –≥–∞–Ω—Ç–µ–ª–∏ –∏–∑-–∑–∞ –≥–æ–ª–æ–≤—ã")
                item2 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π")
                item3 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–†–∞–∑–≥–∏–±–∞–Ω–∏–µ —Ä—É–∫ –≤ –Ω–∞–∫–ª–æ–Ω–µ")
                item4 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–†–∞–∑–≤–µ–¥–µ–Ω–∏–µ –≥–∞–Ω—Ç–µ–ª–µ–π")
                item5 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–û–±—Ä–∞—Ç–Ω—ã–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è –æ—Ç —Å–∫–∞–º—å–∏")
                item6 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–û—Ç–∂–∏–º–∞–Ω–∏—è –æ—Ç –ø–æ–ª–∞")
                item7 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item4)
                markup.add(item5)
                markup.add(item6)
                markup.add(item7)
                id_training = 1
                name_of_exercises = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
                                                     reply_markup=markup)
                bot.register_next_step_handler(name_of_exercises, start_3, id_training)
            if message.text.strip() == "üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –±–∏—Ü–µ–ø—Å –∏ —Å–ø–∏–Ω—É":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—è–≥–∞ –≥–∞–Ω—Ç–µ–ª–µ–π –≤ –Ω–∞–∫–ª–æ–Ω–µ")
                item2 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ–¥—ä–µ–º –Ω–∞ –±–∏—Ü–µ–ø—Å —Å—Ç–æ—è")
                item3 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ–¥—ä–µ–º –≤–µ—Å–∞ –∫ –≥—Ä—É–¥–∏ —Å –æ–ø–æ—Ä–æ–π –Ω–∞ —Å–∫–∞–º—å—é")
                item4 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—ä–µ–º –Ω–∞ –±–∏—Ü–µ–ø—Å —Å–∏–¥—è")
                item5 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—è–≥–∞ + –ø–æ–¥—ä–µ–º –≥–∞–Ω—Ç–µ–ª—å")
                item6 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ–¥—ä–µ–º—ã –Ω–∞ –±–∏—Ü–µ–ø—Å ¬´–º–æ–ª–æ—Ç¬ª")
                item7 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item4)
                markup.add(item5)
                markup.add(item6)
                markup.add(item7)
                id_training = 2
                name_of_exercises = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
                                                     reply_markup=markup)
                bot.register_next_step_handler(name_of_exercises, start_3, id_training)
            if message.text.strip() == "üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –ø–ª–µ—á–∏":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ñ–∏–º –≥–∞–Ω—Ç–µ–ª—å —Å—Ç–æ—è")
                item2 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–æ–¥—ä–µ–º –≥–∞–Ω—Ç–µ–ª–µ–π –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π")
                item3 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–†–∞–∑–≤–µ–¥–µ–Ω–∏–µ –≥–∞–Ω—Ç–µ–ª–µ–π –≤ —Å—Ç–æ—Ä–æ–Ω—ã")
                item4 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–¢—è–≥–∞ –≤–µ—Å–∞ –∫ –ø–æ–¥–±–æ—Ä–æ–¥–∫—É")
                item5 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∂–∏–º —Å—Ç–æ—è")
                item6 = types.KeyboardButton("üèãÔ∏è‚Äç‚ôÇÔ∏è–†–∞–∑–≤–µ–¥–µ–Ω–∏–µ –≥–∞–Ω—Ç–µ–ª–µ–π –≤ –Ω–∞–∫–ª–æ–Ω–µ")
                item7 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item4)
                markup.add(item5)
                markup.add(item6)
                markup.add(item7)
                id_training = 3
                name_of_exercises = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
                                                     reply_markup=markup)
                bot.register_next_step_handler(name_of_exercises, start_3, id_training)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –≤–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î, —Ç–æ –¥–∞–ª—å–Ω–µ–π—à–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ Start 2-6,
    # –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤ –∫–æ–Ω—Ü–µ –∑–∞–ø—Ä–æ—Å–æ–º –∫ –ë–î –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å—å—é.
    def start_3(name_of_exercises, id_training):
        date_of_training = bot.send_message(name_of_exercises.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥-–º–º-–≥–≥–≥–≥')
        bot.register_next_step_handler(date_of_training, start_4, name_of_exercises.text, id_training)

    def start_4(date_of_training, name_of_exercises, id_training):
        operating_weight = bot.send_message(date_of_training.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä–∞–±–æ—á–∏–π –≤–µ—Å( –≤ –∫–≥)')
        bot.register_next_step_handler(operating_weight, start_5, date_of_training.text, name_of_exercises, id_training)

    def start_5(operating_weight, date_of_training, name_of_exercises, id_training):
        number_of_repetitions = bot.send_message(operating_weight.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤')
        bot.register_next_step_handler(number_of_repetitions, start_6, operating_weight.text, date_of_training,
                                       name_of_exercises, id_training)

    def start_6(number_of_repetitions, operating_weight, date_of_training, name_of_exercises, id_training):
        try:
            with connection.cursor() as cursor:
                cursor.execute(
                    f'''insert into exercises (
                    id_training,
                    name_of_exercises,
                    date_of_training,
                    operating_weight,
                    number_of_repetitions) 
                    values ({id_training},
                            '{name_of_exercises}',
                            '{date_of_training}',
                            {operating_weight},
                            {number_of_repetitions.text});               
                    '''
                )

            bot.send_message(number_of_repetitions.chat.id, f'–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: {name_of_exercises}\n'
                                                            f'–î–∞—Ç–∞: {date_of_training}\n'
                                                            f'–†–∞–±–æ—á–∏–π –≤–µ—Å: {operating_weight}\n'
                                                            f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π: {number_of_repetitions.text}\n'
                                                            f'id_training:{id_training}')
            bot.send_message(number_of_repetitions.chat.id, '–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')

            bot.register_next_step_handler(number_of_repetitions, star_menu)
        except Exception as exce:
            print('–û—à–∏–±–∫–∞! –î–∞–Ω–Ω—ã–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã!', exce)
            bot.send_message(number_of_repetitions.chat.id, '–û—à–∏–±–∫–∞! –î–∞–Ω–Ω—ã–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
            bot.register_next_step_handler(number_of_repetitions, star_menu)

    bot.infinity_polling(none_stop=True, interval=0)
except Exception as ex:
    print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å postgresql", ex)
finally:
    if connection:
        connection.close()
        print('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Postresql –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
